* なぜアプリケーション切り換えツールを使うのか？
** こんなストレスありませんか？
- 目的のアプリに到達するまで、何度も ALT+TAB を連打する。
- エクセルなど同一アプリだが、異なるファイルが複数開かれていて…
  - 見分けるために数秒～10秒ほど凝視する。
  - ダメ元で切り換えてみたが、間違っていたので、再度切り換えた。
** 影響: 低生産性
- 低生産性
  - ∵集中力の散逸 & 心の安寧の揺らぎ
    - ∵時間のロス
    - ∵眼精疲労
    - ∵間違えることがある
** アプリケーション切り換えツールを使わなくても
- ALT+TAB と マウスの組み合わせ
  - 注意: ALT キー は押し下げられたまま
- ALT+TAB と カーソルキーの組み合わせ
  - 注意: ALT キー は押し下げられたまま
- 仮想デスクトップの活用
  - 切り換えうるアプリケーションを予め組（クミ）に分けておく。
  - 切り換えうるアプリケーションの母数を減らす。
  - ショートカットキー
    - 作成 = Win + Ctrl + D
    - 切り換え = Win + Ctrl + 左右どちらかのカーソルキー
    - 一覧表示 = Win + TAB
    - 削除 = Win + Ctrl + F4
* 「窓替え」の紹介
** 「窓替え」の長所
*** 長所
- 最低2打で切り換えられる
  1. 呼び出しキー
  2. 割り当てられたアルファベット
- アルファベットを自由に割り当てられる
- アルファベットの割り当てられが保持される
  - アプリを再起動しても保持される
  - PCを再起動しても保持される
*** 効果
- アプリの切り換え時に思考が途切れない、途切れにくい
  - 特に常駐アプリには
    - エクスプローラー
    - outlook
    - slack
    - お気に入りのエディタ
** 短所
- もはや保守されていない。
  - Windows 10 や Windows 11 でも動作はするが...
  - 同様の後発アプリがあるが、2打での切り換えができない
* 実践
** インストール
** キーの割り当て方法
1. 起動する
2. ALT + r を押し、割り当てを変更するモードに遷移する。
3. 割り当てたいアルファベットを押す。
   - 大文字と小文字は区別される。
** キーの割り当て方針
- 頭文字
- 押しやすさ
- 複数ウィンドウ同士の関連付け

*** 頭文字

| m | outlook の Mail ウィンドウ                                             |
| y | outlook の 予定（Yotei） ウィンドウ                                    |
| s | Slack                                                                  |
| d | Directory（エクスプローラー）                                          |
| t | tool → Webブラウザによく使う翻訳サイト・類義語検索サイトを表示しておく |
| v | VsCode                                                                 |

# よく使うアプリなので、押しやすさの観点にも該当する。

*** 押しやすさ

1. ホームポジションのキーが押しやすい。
2. 人差し指が押しやすい。

| f | お気に入りのエディタ           | 人差し指 |
| g | Windows ターミナル（WSL2）     | 人差し指 |
| h | ＜欠番＞                       | 人差し指 |
| j | その時々で最も注目しているモノ | 人差し指 |

*** 複数ウィンドウ同士の関連付け

**** 例1: ある資料（仕様書など）の新旧を見比べるとき

| j | 新版 | 小文字 |
| J | 旧版 | 大文字 |

- ※そもそもの見比べ方針のあるべき論
  - 肉眼で行わず、差分を可視化するツールを使うべし。
    - linux の "diff" コマンド
    - Windowsアプリの "winmerge"
  - 肉眼で行う場合には、dualモニターだと便利である。

**** 例2: 関連する資料を複数同時に読むとき

| j | 資料A |
| k | 資料B |
| l | 資料C |

- j → k → l は以下の両方の順序に該当するので、自然に想起しやすい。
  - アルファベット順
  - キーボードの配列順
- ホームポジションなので押しやすくもある。

4つ以上ならば、 j・k・l の前後の i や n ・ m なども使う。
